{"remainingRequest":"/Users/richie/projects/react-mixitup/node_modules/babel-loader/lib/index.js??ref--6-1!/Users/richie/projects/react-mixitup/node_modules/@mdx-js/loader/index.js??ref--6-2!/Users/richie/projects/react-mixitup/node_modules/source-map-loader/index.js!/Users/richie/projects/react-mixitup/README.md","dependencies":[{"path":"/Users/richie/projects/react-mixitup/README.md","mtime":1554051210416},{"path":"/Users/richie/projects/react-mixitup/node_modules/cache-loader/dist/cjs.js","mtime":1555000957022},{"path":"/Users/richie/projects/react-mixitup/node_modules/babel-loader/lib/index.js","mtime":1548679235691},{"path":"/Users/richie/projects/react-mixitup/node_modules/@mdx-js/loader/index.js","mtime":1555000957203},{"path":"/Users/richie/projects/react-mixitup/node_modules/source-map-loader/index.js","mtime":1548929420374}],"contextDependencies":[],"result":["import _objectWithoutProperties from \"/Users/richie/projects/react-mixitup/node_modules/docz-core/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"/Users/richie/projects/react-mixitup/node_modules/docz-core/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/richie/projects/react-mixitup/node_modules/docz-core/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/richie/projects/react-mixitup/node_modules/docz-core/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/richie/projects/react-mixitup/node_modules/docz-core/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/richie/projects/react-mixitup/node_modules/docz-core/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/richie/projects/react-mixitup/README.md\";\n\n(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\nimport React from 'react';\nimport { MDXTag } from '@mdx-js/tag';\nvar layoutProps = {};\n\nvar MDXContent =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(MDXContent, _React$Component);\n\n  function MDXContent(props) {\n    var _this;\n\n    _classCallCheck(this, MDXContent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MDXContent).call(this, props));\n    _this.layout = null;\n    return _this;\n  }\n\n  _createClass(MDXContent, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          components = _this$props.components,\n          props = _objectWithoutProperties(_this$props, [\"components\"]);\n\n      return React.createElement(MDXTag, {\n        name: \"wrapper\",\n        components: components,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, React.createElement(MDXTag, {\n        name: \"h1\",\n        components: components,\n        props: {\n          \"id\": \"react-mixitup\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, \"react-mixitup\"), React.createElement(MDXTag, {\n        name: \"blockquote\",\n        components: components,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, React.createElement(MDXTag, {\n        name: \"p\",\n        components: components,\n        parentName: \"blockquote\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, \"Animate the addition, removal and shuffling of elements.\")), React.createElement(MDXTag, {\n        name: \"p\",\n        components: components,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, React.createElement(MDXTag, {\n        name: \"a\",\n        components: components,\n        parentName: \"p\",\n        props: {\n          \"href\": \"https://www.npmjs.com/package/react-mixitup\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, React.createElement(MDXTag, {\n        name: \"img\",\n        components: components,\n        parentName: \"a\",\n        props: {\n          \"src\": \"https://img.shields.io/npm/v/react-mixitup.svg\",\n          \"alt\": \"NPM\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      })), \" \", React.createElement(MDXTag, {\n        name: \"a\",\n        components: components,\n        parentName: \"p\",\n        props: {\n          \"href\": \"https://standardjs.com\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, React.createElement(MDXTag, {\n        name: \"img\",\n        components: components,\n        parentName: \"a\",\n        props: {\n          \"src\": \"https://img.shields.io/badge/code_style-standard-brightgreen.svg\",\n          \"alt\": \"JavaScript Style Guide\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }))), React.createElement(MDXTag, {\n        name: \"h2\",\n        components: components,\n        props: {\n          \"id\": \"install\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, \"Install\"), React.createElement(MDXTag, {\n        name: \"pre\",\n        components: components,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(MDXTag, {\n        name: \"code\",\n        components: components,\n        parentName: \"pre\",\n        props: {\n          \"className\": \"language-bash\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, \"npm install --save react-mixitup\\n\")), React.createElement(MDXTag, {\n        name: \"h2\",\n        components: components,\n        props: {\n          \"id\": \"usage\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, \"Usage\"), React.createElement(MDXTag, {\n        name: \"pre\",\n        components: components,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(MDXTag, {\n        name: \"code\",\n        components: components,\n        parentName: \"pre\",\n        props: {\n          \"className\": \"language-tsx\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, \"import * as React from 'react'\\nimport ReactMixitup from 'react-mixitup'\\nimport { shuffle, range } from 'lodash'\\n\\nclass Example extends React.Component {\\n  state = { items: [1, 2, 3, 4] }\\n\\n  shuffle = () =>\\n    this.setState({\\n      items: shuffle(range(Math.round(Math.random() * 15)))\\n    })\\n\\n  render() {\\n    return (\\n      <Fragment>\\n        <button onClick={this.shuffle}>Shuffle</button>\\n        <ReactMixitup\\n          items={this.state.items}\\n          renderCells={items => (\\n            <div style={{ background: 'yellow' }}>\\n              {items.map(({ key, ref, style }) => (\\n                <div key={key} ref={ref} style={{ ...style, background: 'red' }}>\\n                  {key}\\n                </div>\\n              ))}\\n            </div>\\n          )}\\n        />\\n      </Fragment>\\n    )\\n  }\\n}\\n\")), React.createElement(MDXTag, {\n        name: \"h2\",\n        components: components,\n        props: {\n          \"id\": \"license\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"License\"), React.createElement(MDXTag, {\n        name: \"p\",\n        components: components,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"MIT \\xA9 \", React.createElement(MDXTag, {\n        name: \"a\",\n        components: components,\n        parentName: \"p\",\n        props: {\n          \"href\": \"https://github.com/ricsam\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"ricsam\")));\n    }\n  }, {\n    key: \"__reactstandin__regenerateByEval\",\n    // @ts-ignore\n    value: function __reactstandin__regenerateByEval(key, code) {\n      // @ts-ignore\n      this[key] = eval(code);\n    }\n  }]);\n\n  return MDXContent;\n}(React.Component);\n\nexport { MDXContent as default };\n\nif (typeof MDXContent !== 'undefined' && MDXContent && MDXContent === Object(MDXContent)) {\n  Object.defineProperty(MDXContent, '__filemeta', {\n    enumerable: true,\n    configurable: true,\n    value: {\n      name: \"MDXContent\",\n      filename: \"README.md\"\n    }\n  });\n}\n\nif (typeof MDXContent !== 'undefined' && MDXContent && MDXContent === Object(MDXContent)) {\n  Object.defineProperty(MDXContent, '__filemeta', {\n    enumerable: true,\n    configurable: true,\n    value: {\n      name: \"MDXContent\",\n      filename: \"README.md\"\n    }\n  });\n}\n\nMDXContent.isMDXComponent = true;\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(layoutProps, \"layoutProps\", \"/Users/richie/projects/react-mixitup/README.md\");\n  reactHotLoader.register(MDXContent, \"MDXContent\", \"/Users/richie/projects/react-mixitup/README.md\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();",{"version":3,"sources":["/Users/richie/projects/react-mixitup/README.md"],"names":["React","MDXTag","layoutProps","MDXContent","props","layout","components","Component","isMDXComponent"],"mappings":"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","sourcesContent":["\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  \n\nconst layoutProps = {\n  \n};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}><MDXTag name=\"h1\" components={components} props={{\"id\":\"react-mixitup\"}}>{`react-mixitup`}</MDXTag>\n<MDXTag name=\"blockquote\" components={components}>\n<MDXTag name=\"p\" components={components} parentName=\"blockquote\">{`Animate the addition, removal and shuffling of elements.`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://www.npmjs.com/package/react-mixitup\"}}><MDXTag name=\"img\" components={components} parentName=\"a\" props={{\"src\":\"https://img.shields.io/npm/v/react-mixitup.svg\",\"alt\":\"NPM\"}}></MDXTag></MDXTag>{` `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://standardjs.com\"}}><MDXTag name=\"img\" components={components} parentName=\"a\" props={{\"src\":\"https://img.shields.io/badge/code_style-standard-brightgreen.svg\",\"alt\":\"JavaScript Style Guide\"}}></MDXTag></MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"install\"}}>{`Install`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-bash\"}}>{`npm install --save react-mixitup\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"usage\"}}>{`Usage`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-tsx\"}}>{`import * as React from 'react'\nimport ReactMixitup from 'react-mixitup'\nimport { shuffle, range } from 'lodash'\n\nclass Example extends React.Component {\n  state = { items: [1, 2, 3, 4] }\n\n  shuffle = () =>\n    this.setState({\n      items: shuffle(range(Math.round(Math.random() * 15)))\n    })\n\n  render() {\n    return (\n      <Fragment>\n        <button onClick={this.shuffle}>Shuffle</button>\n        <ReactMixitup\n          items={this.state.items}\n          renderCells={items => (\n            <div style={{ background: 'yellow' }}>\n              {items.map(({ key, ref, style }) => (\n                <div key={key} ref={ref} style={{ ...style, background: 'red' }}>\n                  {key}\n                </div>\n              ))}\n            </div>\n          )}\n        />\n      </Fragment>\n    )\n  }\n}\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"license\"}}>{`License`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`MIT © `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://github.com/ricsam\"}}>{`ricsam`}</MDXTag></MDXTag>\n           </MDXTag>\n  }\n}\nMDXContent.isMDXComponent = true\n  "]}]}