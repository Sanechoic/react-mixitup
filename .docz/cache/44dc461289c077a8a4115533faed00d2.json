{"remainingRequest":"/Users/richie/projects/react-mixitup/node_modules/thread-loader/dist/cjs.js??ref--11-1!/Users/richie/projects/react-mixitup/node_modules/babel-loader/lib/index.js??ref--11-2!/Users/richie/projects/react-mixitup/node_modules/source-map-loader/index.js!/Users/richie/projects/react-mixitup/documentation/Shuffle.tsx","dependencies":[{"path":"/Users/richie/projects/react-mixitup/documentation/Shuffle.tsx","mtime":1555009530635},{"path":"/Users/richie/projects/react-mixitup/node_modules/cache-loader/dist/cjs.js","mtime":1555000957022},{"path":"/Users/richie/projects/react-mixitup/node_modules/thread-loader/dist/cjs.js","mtime":1555000957340},{"path":"/Users/richie/projects/react-mixitup/node_modules/babel-loader/lib/index.js","mtime":1548679235691},{"path":"/Users/richie/projects/react-mixitup/node_modules/source-map-loader/index.js","mtime":1548929420374}],"contextDependencies":[],"result":["import _slicedToArray from \"/Users/richie/projects/react-mixitup/node_modules/docz-core/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"/Users/richie/projects/react-mixitup/node_modules/docz-core/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/richie/projects/react-mixitup/documentation/Shuffle.tsx\";\n\n(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\nimport React from 'react';\nimport { shuffle, range, uniq } from 'lodash';\nimport ReactMixitup from '../src/react-mixitup';\n\nvar getItems = function getItems() {\n  return uniq(shuffle(range(Math.round(Math.random() * 40)).map(function (v) {\n    return v + Math.round(Math.random() * 100);\n  })));\n};\n\nvar Wrapper = React.forwardRef(function (_ref, ref) {\n  var children = _ref.children,\n      style = _ref.style;\n  return React.createElement(\"div\", {\n    style: _objectSpread({\n      transition: 'height 0.5s ease',\n      borderBottom: '1px solid black',\n      maxWidth: \"\".concat(80 * 6, \"px\")\n    }, style),\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, children);\n});\n\nvar Shuffle = function Shuffle() {\n  var _React$useState = React.useState(getItems()),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      items = _React$useState2[0],\n      setItems = _React$useState2[1];\n\n  var shuffleItems = React.useCallback(function () {\n    setItems(getItems());\n  }, []);\n  var renderCells = React.useCallback(function (cells) {\n    return React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        flexWrap: 'wrap'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, cells.map(function (_ref2) {\n      var key = _ref2.key,\n          ref = _ref2.ref,\n          style = _ref2.style;\n      return React.createElement(\"div\", {\n        key: key,\n        ref: ref,\n        style: _objectSpread({}, style, {\n          background: 'red',\n          width: 80,\n          height: 80,\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center'\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, key);\n    }));\n  }, []);\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: shuffleItems,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"Shuffle\"), React.createElement(ReactMixitup, {\n    items: items,\n    renderCells: renderCells,\n    Wrapper: Wrapper,\n    duration: 5000,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }));\n};\n\nvar _default = Shuffle;\nexport default _default;\n\nif (typeof Shuffle !== 'undefined' && Shuffle && Shuffle === Object(Shuffle)) {\n  Object.defineProperty(Shuffle, '__filemeta', {\n    enumerable: true,\n    configurable: true,\n    value: {\n      name: \"Shuffle\",\n      filename: \"documentation/Shuffle.tsx\"\n    }\n  });\n}\n\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(getItems, \"getItems\", \"/Users/richie/projects/react-mixitup/documentation/Shuffle.tsx\");\n  reactHotLoader.register(Wrapper, \"Wrapper\", \"/Users/richie/projects/react-mixitup/documentation/Shuffle.tsx\");\n  reactHotLoader.register(Shuffle, \"Shuffle\", \"/Users/richie/projects/react-mixitup/documentation/Shuffle.tsx\");\n  reactHotLoader.register(_default, \"default\", \"/Users/richie/projects/react-mixitup/documentation/Shuffle.tsx\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();",{"version":3,"sources":["/Users/richie/projects/react-mixitup/documentation/Shuffle.tsx"],"names":["React","shuffle","range","uniq","ReactMixitup","getItems","Math","round","random","map","v","Wrapper","forwardRef","ref","children","style","transition","borderBottom","maxWidth","Shuffle","useState","items","setItems","shuffleItems","useCallback","renderCells","cells","display","flexWrap","key","background","width","height","alignItems","justifyContent"],"mappings":"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","sourcesContent":["import React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { shuffle, range, uniq } from 'lodash';\nimport ReactMixitup from '../src/react-mixitup';\n\nconst getItems = () =>\n  uniq(\n    shuffle(range(Math.round(Math.random() * 40)).map(v => v + Math.round(Math.random() * 100)))\n  );\n\nconst Wrapper = React.forwardRef(\n  (\n    { children, style }: { children: React.ReactNode; style: React.CSSProperties },\n    ref: React.Ref<HTMLDivElement>\n  ) => {\n    return (\n      <div\n        style={{\n          transition: 'height 0.5s ease',\n          borderBottom: '1px solid black',\n          maxWidth: `${80 * 6}px`,\n          ...style\n        }}\n        ref={ref}\n      >\n        {children}\n      </div>\n    );\n  }\n);\n\nconst Shuffle = () => {\n  const [items, setItems] = React.useState(getItems());\n\n  const shuffleItems = React.useCallback(() => {\n    setItems(getItems());\n  }, []);\n\n  const renderCells = React.useCallback(\n    (\n      cells: Array<{\n        key: string;\n        ref?: React.Ref<any>;\n        style?: React.CSSProperties;\n      }>\n    ) => (\n      <div style={{ display: 'flex', flexWrap: 'wrap' }}>\n        {cells.map(({ key, ref, style }) => (\n          <div\n            key={key}\n            ref={ref}\n            style={{\n              ...style,\n              background: 'red',\n              width: 80,\n              height: 80,\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'center'\n            }}\n          >\n            {key}\n          </div>\n        ))}\n      </div>\n    ),\n    []\n  );\n\n  return (\n    <React.Fragment>\n      <button onClick={shuffleItems}>Shuffle</button>\n      <ReactMixitup items={items} renderCells={renderCells} Wrapper={Wrapper} duration={5000}/>\n    </React.Fragment>\n  );\n};\nexport default Shuffle;\n"]}]}