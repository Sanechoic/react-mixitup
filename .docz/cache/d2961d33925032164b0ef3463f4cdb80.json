{"remainingRequest":"/Users/richie/projects/react-mixitup/node_modules/thread-loader/dist/cjs.js??ref--11-1!/Users/richie/projects/react-mixitup/node_modules/babel-loader/lib/index.js??ref--11-2!/Users/richie/projects/react-mixitup/node_modules/source-map-loader/index.js!/Users/richie/projects/react-mixitup/documentation/Shuffle.tsx","dependencies":[{"path":"/Users/richie/projects/react-mixitup/documentation/Shuffle.tsx","mtime":1555009530635},{"path":"/Users/richie/projects/react-mixitup/node_modules/cache-loader/dist/cjs.js","mtime":1555000957022},{"path":"/Users/richie/projects/react-mixitup/node_modules/thread-loader/dist/cjs.js","mtime":1555000957340},{"path":"/Users/richie/projects/react-mixitup/node_modules/babel-loader/lib/index.js","mtime":1548679235691},{"path":"/Users/richie/projects/react-mixitup/node_modules/source-map-loader/index.js","mtime":1548929420374}],"contextDependencies":[],"result":["import _slicedToArray from\"/Users/richie/projects/react-mixitup/node_modules/docz-core/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _objectSpread from\"/Users/richie/projects/react-mixitup/node_modules/docz-core/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";import React from'react';import{shuffle,range,uniq}from'lodash';import ReactMixitup from'../src/react-mixitup';var getItems=function getItems(){return uniq(shuffle(range(Math.round(Math.random()*40)).map(function(v){return v+Math.round(Math.random()*100);})));};var Wrapper=React.forwardRef(function(_ref,ref){var children=_ref.children,style=_ref.style;return React.createElement(\"div\",{style:_objectSpread({transition:'height 0.5s ease',borderBottom:'1px solid black',maxWidth:\"\".concat(80*6,\"px\")},style),ref:ref},children);});var Shuffle=function Shuffle(){var _React$useState=React.useState(getItems()),_React$useState2=_slicedToArray(_React$useState,2),items=_React$useState2[0],setItems=_React$useState2[1];var shuffleItems=React.useCallback(function(){setItems(getItems());},[]);var renderCells=React.useCallback(function(cells){return React.createElement(\"div\",{style:{display:'flex',flexWrap:'wrap'}},cells.map(function(_ref2){var key=_ref2.key,ref=_ref2.ref,style=_ref2.style;return React.createElement(\"div\",{key:key,ref:ref,style:_objectSpread({},style,{background:'red',width:80,height:80,display:'flex',alignItems:'center',justifyContent:'center'})},key);}));},[]);return React.createElement(React.Fragment,null,React.createElement(\"button\",{onClick:shuffleItems},\"Shuffle\"),React.createElement(ReactMixitup,{items:items,renderCells:renderCells,Wrapper:Wrapper,duration:5000}));};export default Shuffle;if(typeof Shuffle!=='undefined'&&Shuffle&&Shuffle===Object(Shuffle)){Object.defineProperty(Shuffle,'__filemeta',{enumerable:true,configurable:true,value:{name:\"Shuffle\",filename:\"documentation/Shuffle.tsx\"}});}",{"version":3,"sources":["/Users/richie/projects/react-mixitup/documentation/Shuffle.tsx"],"names":["React","shuffle","range","uniq","ReactMixitup","getItems","Math","round","random","map","v","Wrapper","forwardRef","ref","children","style","transition","borderBottom","maxWidth","Shuffle","useState","items","setItems","shuffleItems","useCallback","renderCells","cells","display","flexWrap","key","background","width","height","alignItems","justifyContent"],"mappings":"kWAAA,MAAOA,CAAAA,KAAP,KAAkC,OAAlC,CAEA,OAASC,OAAT,CAAkBC,KAAlB,CAAyBC,IAAzB,KAAqC,QAArC,CACA,MAAOC,CAAAA,YAAP,KAAyB,sBAAzB,CAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,SACfF,CAAAA,IAAI,CACFF,OAAO,CAACC,KAAK,CAACI,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,GAAgB,EAA3B,CAAD,CAAL,CAAsCC,GAAtC,CAA0C,SAAAC,CAAC,QAAIA,CAAAA,CAAC,CAAGJ,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,GAAgB,GAA3B,CAAR,EAA3C,CAAD,CADL,CADW,EAAjB,CAKA,GAAMG,CAAAA,OAAO,CAAGX,KAAK,CAACY,UAAN,CACd,cAEEC,GAFF,CAGK,IAFDC,CAAAA,QAEC,MAFDA,QAEC,CAFSC,KAET,MAFSA,KAET,CACH,MACE,4BACE,KAAK,gBACHC,UAAU,CAAE,kBADT,CAEHC,YAAY,CAAE,iBAFX,CAGHC,QAAQ,WAAK,GAAK,CAAV,MAHL,EAIAH,KAJA,CADP,CAOE,GAAG,CAAEF,GAPP,EASGC,QATH,CADF,CAaD,CAlBa,CAAhB,CAqBA,GAAMK,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAAM,qBACMnB,KAAK,CAACoB,QAAN,CAAef,QAAQ,EAAvB,CADN,oDACbgB,KADa,qBACNC,QADM,qBAGpB,GAAMC,CAAAA,YAAY,CAAGvB,KAAK,CAACwB,WAAN,CAAkB,UAAM,CAC3CF,QAAQ,CAACjB,QAAQ,EAAT,CAAR,CACD,CAFoB,CAElB,EAFkB,CAArB,CAIA,GAAMoB,CAAAA,WAAW,CAAGzB,KAAK,CAACwB,WAAN,CAClB,SACEE,KADF,QAOE,4BAAK,KAAK,CAAE,CAAEC,OAAO,CAAE,MAAX,CAAmBC,QAAQ,CAAE,MAA7B,CAAZ,EACGF,KAAK,CAACjB,GAAN,CAAU,mBAAGoB,CAAAA,GAAH,OAAGA,GAAH,CAAQhB,GAAR,OAAQA,GAAR,CAAaE,KAAb,OAAaA,KAAb,OACT,4BACE,GAAG,CAAEc,GADP,CAEE,GAAG,CAAEhB,GAFP,CAGE,KAAK,kBACAE,KADA,EAEHe,UAAU,CAAE,KAFT,CAGHC,KAAK,CAAE,EAHJ,CAIHC,MAAM,CAAE,EAJL,CAKHL,OAAO,CAAE,MALN,CAMHM,UAAU,CAAE,QANT,CAOHC,cAAc,CAAE,QAPb,EAHP,EAaGL,GAbH,CADS,EAAV,CADH,CAPF,EADkB,CA4BlB,EA5BkB,CAApB,CA+BA,MACE,qBAAC,KAAD,CAAO,QAAP,MACE,8BAAQ,OAAO,CAAEN,YAAjB,YADF,CAEE,oBAAC,YAAD,EAAc,KAAK,CAAEF,KAArB,CAA4B,WAAW,CAAEI,WAAzC,CAAsD,OAAO,CAAEd,OAA/D,CAAwE,QAAQ,CAAE,IAAlF,EAFF,CADF,CAMD,CA5CD,CA6CA,cAAeQ,CAAAA,OAAf,C","sourcesContent":["import React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { shuffle, range, uniq } from 'lodash';\nimport ReactMixitup from '../src/react-mixitup';\n\nconst getItems = () =>\n  uniq(\n    shuffle(range(Math.round(Math.random() * 40)).map(v => v + Math.round(Math.random() * 100)))\n  );\n\nconst Wrapper = React.forwardRef(\n  (\n    { children, style }: { children: React.ReactNode; style: React.CSSProperties },\n    ref: React.Ref<HTMLDivElement>\n  ) => {\n    return (\n      <div\n        style={{\n          transition: 'height 0.5s ease',\n          borderBottom: '1px solid black',\n          maxWidth: `${80 * 6}px`,\n          ...style\n        }}\n        ref={ref}\n      >\n        {children}\n      </div>\n    );\n  }\n);\n\nconst Shuffle = () => {\n  const [items, setItems] = React.useState(getItems());\n\n  const shuffleItems = React.useCallback(() => {\n    setItems(getItems());\n  }, []);\n\n  const renderCells = React.useCallback(\n    (\n      cells: Array<{\n        key: string;\n        ref?: React.Ref<any>;\n        style?: React.CSSProperties;\n      }>\n    ) => (\n      <div style={{ display: 'flex', flexWrap: 'wrap' }}>\n        {cells.map(({ key, ref, style }) => (\n          <div\n            key={key}\n            ref={ref}\n            style={{\n              ...style,\n              background: 'red',\n              width: 80,\n              height: 80,\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'center'\n            }}\n          >\n            {key}\n          </div>\n        ))}\n      </div>\n    ),\n    []\n  );\n\n  return (\n    <React.Fragment>\n      <button onClick={shuffleItems}>Shuffle</button>\n      <ReactMixitup items={items} renderCells={renderCells} Wrapper={Wrapper} duration={5000}/>\n    </React.Fragment>\n  );\n};\nexport default Shuffle;\n"]}]}